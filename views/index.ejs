<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kym</title>
    <script src="https://www.youtube.com/iframe_api"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.2/font/bootstrap-icons.css">
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body>

    <script>
        function like(vidid, title){
            title = title.substring(0,20)+"...";
            let likedSongs = JSON.parse(localStorage.getItem('likedSongs')) || [];
            if(!likedSongs.some(song => song.vidid === vidid)){
                likedSongs.push({ vidid, title });
                localStorage.setItem('likedSongs', JSON.stringify(likedSongs));
            }
            window.location.assign("/"); 
        }
        function unlike(vidid){
            let likedSongs = JSON.parse(localStorage.getItem('likedSongs')) || [];
            let idx = likedSongs.findIndex(song => song.vidid === vidid);
            likedSongs.splice(idx, 1);
            localStorage.setItem('likedSongs', JSON.stringify(likedSongs));
            window.location.assign("/"); 
        }
        document.addEventListener('DOMContentLoaded', function() {
        let likedSongs = JSON.parse(localStorage.getItem('likedSongs')) || [];
        let likedSongsContainer = document.getElementById('liked-songs-container');
        likedSongs.reverse().forEach(song => {
            let songcontainer = document.createElement('div');
            let songButton = document.createElement('form');
            songButton.method = 'POST';
            songButton.action = '/stream';

            let button = document.createElement('button');
            button.name = 'video';
            button.value = song.vidid;
            button.type = 'submit';
            button.className = 'block p-2 my-2 border border-gray-300';
            button.innerHTML = song.title;
            songButton.appendChild(button);
            songcontainer.appendChild(songButton);

            let unlikeButton = document.createElement('button');
            unlikeButton.onclick = function() {
                unlike(song.vidid);
            };
            unlikeButton.className = 'block p-2 my-2 border border-gray-300';
            unlikeButton.innerHTML = '<i class="bi bi-star-fill"></i>';
            songcontainer.appendChild(unlikeButton);
            songcontainer.className = 'flex flex-wrap gap-10 border border-black justify-between';
            likedSongsContainer.appendChild(songcontainer);
        });
    });
    </script>
    <h1 class="text-center text-4xl"><a href="/">KYM</a></h1>
    <div class="container mx-auto py-4">
        <form action="/search" method="POST" class="p-2 flex justify-center" autocomplete="off">
            <input type="text" id="search-box" name="search" class="border border-black" placeholder="Search for a Song!">
            <input type="submit" value="Search" class="border border-black">
        </form>

        <div id="searchlist" class="p-4">
            <% if (locals.vidlist) { %>
                <% vidlist.forEach(v => { %>
                <div class="flex flex-wrap gap-10 border border-black justify-between items-center">
                <form method="POST" action="/stream" class="">
                        <button name="video" value="<%= v.vidid %>" type="submit" class="block p-2 my-2 border border-gray-300">
                            <%= v.title %>
                        </button> 
                    </form>
                    <button onclick="like('<%= v.vidid %>', '<%= v.title %>')" class="block p-2 my-2 border border-gray-300"><i class="bi bi-star"></i></button>
                </div>
                <% }); %>
            <% } %>
        </div>

        <% if (locals.videolink) { %>
        <div class="flex flex-col justify-center items-center flex-wrap gap-3 py-4 px-4">
            <h1 class="text-2xl"><%= videotitle %></h1>
            <button onclick="like('<%= videolink %>', '<%= videotitle %>')" class="block p-2 my-2 border border-gray-300"><i class="bi bi-star"></i></button>
            <button class="cust-audiobtn text-3xl"><i class="bi bi-play-circle-fill"></i></button>
            
            <input type="range" id="seekBar" value="0" min="0" max="100" step="1">
            <div>
                <span id="currentTime">0:00</span> / <span id="totalDuration">0:00</span>
            </div>
            <div class="flex flex-wrap">
                <i class="bi bi-volume-down text-4xl"></i><input id="custom-vol" type="range" max="100" min="0" value="70" step="5" class="w-48">
            </div>
        </div>
        <div id="player" style="display:none;"></div>
        
        <script>
            let player;
            let customPlaying = false;
            let custAudioBtn = document.querySelector(".cust-audiobtn");
            let custVolume = document.querySelector("#custom-vol");
            let seekBar = document.querySelector("#seekBar");
            let updateInterval;
            function onYouTubeIframeAPIReady() {
                player = new YT.Player('player', {
                    videoId: "<%= videolink %>",
                    playerVars: { 'playsinline': 1 },
                    events: {
                        'onReady': onPlayerReady,
                        'onStateChange': onPlayerStateChange
                    }
                });
            }

            function onPlayerReady(event) {
                player.setVolume(custVolume.value);

                custAudioBtn.addEventListener('click', function() {
                    if (!customPlaying) {
                        customPlaying = true;
                        player.playVideo();
                        custAudioBtn.innerHTML = `<i class="bi bi-stop-circle-fill"></i>`;
                    } else {
                        customPlaying = false;
                        player.pauseVideo();
                        custAudioBtn.innerHTML = `<i class="bi bi-play-circle-fill"></i>`;
                    }
                });

                seekBar.addEventListener('input', () => {
                    const newTime = player.getDuration() * (seekBar.value / 100);
                    player.seekTo(newTime, true);
                });
                custVolume.addEventListener('input', function() {
                    player.setVolume(custVolume.value);
                });

                document.getElementById('totalDuration').textContent = formatTime(player.getDuration());
            }
            function onPlayerStateChange(event) {
                if (event.data == YT.PlayerState.PLAYING) {
                    updateInterval = setInterval(updateSeekBar, 1000); 
                } else {
                    clearInterval(updateInterval);
                }
            }

            function updateSeekBar() {
                const seekBar = document.getElementById('seekBar');
                const currentTime = player.getCurrentTime();
                const duration = player.getDuration();
                seekBar.value = (currentTime / duration) * 100;
                document.getElementById('currentTime').textContent = formatTime(currentTime);
                document.getElementById('totalDuration').textContent = formatTime(duration);
            }
            function formatTime(seconds) {
                const minutes = Math.floor(seconds / 60);
                const remainingSeconds = Math.floor(seconds % 60);
                return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;
            }
        </script>
        <% } %>
        <div id="liked-songs-container" class="container mx-auto py-4 px-4 gap-2 flex flex-col">
            <h2 class="text-2xl">Liked Songs</h2>
        </div>    
    </div>
</body>
</html>
